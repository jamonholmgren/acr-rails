/* This is a mst-gql generated file, don't modify it manually */
/* eslint-disable */
/* tslint:disable */

import { types } from "mobx-state-tree"
import { MSTGQLObject, MSTGQLRef, QueryBuilder } from "mst-gql"
import { PostModel } from "./PostModel"
import { PostModelSelector } from "./PostModel.base"
import { RootStoreType } from "./index"


/**
 * DeletePostPayloadBase
 * auto generated base class for the model DeletePostPayloadModel.
 *
 * Autogenerated return type of DeletePost
 */
export const DeletePostPayloadModelBase = MSTGQLObject
  .named('DeletePostPayload')
  .props({
    __typename: types.optional(types.literal("DeletePostPayload"), "DeletePostPayload"),
    /** A unique identifier for the client performing the mutation. */
    clientMutationId: types.maybeNull(types.string),
    post: types.maybeNull(MSTGQLRef(types.late(() => PostModel))),
    result: types.maybeNull(types.boolean),
  })
  .views(self => ({
    get store() {
      return self.__getStore<RootStoreType>()
    }
  }))

export class DeletePostPayloadModelSelector extends QueryBuilder {
  get clientMutationId() { return this.__attr(`clientMutationId`) }
  get result() { return this.__attr(`result`) }
  post(builder?: string | PostModelSelector | ((selector: PostModelSelector) => PostModelSelector)) { return this.__child(`post`, PostModelSelector, builder) }
}
export function selectFromDeletePostPayload() {
  return new DeletePostPayloadModelSelector()
}

export const deletePostPayloadModelPrimitives = selectFromDeletePostPayload().clientMutationId.result
